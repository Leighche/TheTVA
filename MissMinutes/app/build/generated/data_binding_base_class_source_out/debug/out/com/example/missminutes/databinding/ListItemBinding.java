// Generated by view binder compiler. Do not edit!
package com.example.missminutes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.missminutes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView categoryName;

  @NonNull
  public final TextView description;

  @NonNull
  public final TextView endDate;

  @NonNull
  public final TextView maxGoal;

  @NonNull
  public final TextView minGoal;

  @NonNull
  public final TextView objective;

  @NonNull
  public final TextView startDate;

  @NonNull
  public final ImageView taskImage;

  private ListItemBinding(@NonNull CardView rootView, @NonNull TextView categoryName,
      @NonNull TextView description, @NonNull TextView endDate, @NonNull TextView maxGoal,
      @NonNull TextView minGoal, @NonNull TextView objective, @NonNull TextView startDate,
      @NonNull ImageView taskImage) {
    this.rootView = rootView;
    this.categoryName = categoryName;
    this.description = description;
    this.endDate = endDate;
    this.maxGoal = maxGoal;
    this.minGoal = minGoal;
    this.objective = objective;
    this.startDate = startDate;
    this.taskImage = taskImage;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.categoryName;
      TextView categoryName = ViewBindings.findChildViewById(rootView, id);
      if (categoryName == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.endDate;
      TextView endDate = ViewBindings.findChildViewById(rootView, id);
      if (endDate == null) {
        break missingId;
      }

      id = R.id.maxGoal;
      TextView maxGoal = ViewBindings.findChildViewById(rootView, id);
      if (maxGoal == null) {
        break missingId;
      }

      id = R.id.minGoal;
      TextView minGoal = ViewBindings.findChildViewById(rootView, id);
      if (minGoal == null) {
        break missingId;
      }

      id = R.id.objective;
      TextView objective = ViewBindings.findChildViewById(rootView, id);
      if (objective == null) {
        break missingId;
      }

      id = R.id.startDate;
      TextView startDate = ViewBindings.findChildViewById(rootView, id);
      if (startDate == null) {
        break missingId;
      }

      id = R.id.taskImage;
      ImageView taskImage = ViewBindings.findChildViewById(rootView, id);
      if (taskImage == null) {
        break missingId;
      }

      return new ListItemBinding((CardView) rootView, categoryName, description, endDate, maxGoal,
          minGoal, objective, startDate, taskImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
